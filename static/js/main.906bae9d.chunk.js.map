{"version":3,"sources":["data/models/Job.ts","components/BannerServer.tsx","components/SpotlightImage.tsx","pages/Homepage.tsx","components/PlayerVoteRanking.tsx","components/TopServerReview.tsx","components/ReviewCard.tsx","pages/ReviewsPage.tsx","components/Stream.tsx","pages/StreamsPage.tsx","components/Footer.tsx","pages/ReglementStreamers.tsx","components/Menu.tsx","components/jobs/JobTaxi.tsx","components/jobs/JobPablitoRestau.tsx","pages/JobsPage.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/burningman.png","assets/banner.gif","assets/plage.png","assets/karting.png","assets/taxi.png","assets/Discord-Logo+Wordmark-White.svg","assets/moonside.png","assets/images/jobs/taxiMoldu.jpg"],"names":["JobCategory","BannerServer","className","width","src","bannerGif","alt","href","target","rel","Component","SpotlightImage","Row","Col","xs","xl","this","props","title","texte","Image","rounded","fluid","image","Homepage","imageRight","burningman","Container","Carousel","Item","karting","Caption","plage","taxi","PlayerVoteRanking","state","playerRank","getPlayerVoteRanking","bind","setInterval","Table","striped","bordered","hover","slice","map","player","index","key","color","playername","votes","axios","get","App","topServerToken","then","result","setState","data","players","TopServerReview","step","start","stop","initialRating","fractions","emptySymbol","readonly","fullSymbol","Review","ReviewCard","md","Card","Body","Title","review","global","comment","username","quality","staff","ambient","uptime","ReviewsPage","reviews","getReviewsTopServer","length","advices","catch","console","error","Stream","autoplay","channel","height","layout","muted","targetId","StreamsPage","streamChannels","to","download","Footer","id","ReglementStreamers","Button","as","Link","Menu","serverSlots","serverInfos","slots","name","online","getServerInfos","Navbar","collapseOnSelect","expand","bg","variant","Brand","logo","roundedCircle","Nav","Text","OverlayTrigger","placement","overlay","Tooltip","discordLogo","server","JobTaxi","taxiMoldu","JobPablitoRestau","JobsPage","selectedNavJob","selectedJob","icon","category","colorClass","hasPage","jobs","SERVICE","SHOP","RESTAU","SOIREE","PREMIERE","find","job","activeKey","onSelect","event","eventKey","Badge","pill","switchJobComponents","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.906bae9d.chunk.js","sourcesContent":["import { Component } from \"react\"\r\n\r\nexport default interface Job {\r\n    name: string;\r\n    icon: Component | null;\r\n    category: JobCategory;\r\n    colorClass?: string;\r\n    hasPage?: boolean;\r\n}\r\n\r\nexport enum JobCategory {\r\n    SERVICE = 'Services',\r\n    SOIREE = 'Soirée',\r\n    PREMIERE = 'Secteur primaire',\r\n    SHOP = 'Shop',\r\n    RESTAU = 'Restaurant'\r\n}","import React, { Component } from 'react'\r\nimport { FaDiscord } from 'react-icons/fa';\r\nimport bannerGif from '../assets/banner.gif'\r\n\r\nexport default class BannerServer extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"banner-site\">\r\n                <img width=\"100%\" src={bannerGif} alt=\"Moonside - Serveur GTA5 RP - Chargement\" />\r\n                <div className=\"content\">\r\n                    <h1>MoonSide</h1>\r\n                    <h4>Serveur GTA5 RP - Francophone</h4>\r\n                    <a href=\"https://discord.gg/6PCVYcF\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn-lg btn-secondary\"><FaDiscord /> Nous rejoindre sur Discord</a>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Image } from 'react-bootstrap'\r\n\r\nexport default class SpotlightImage extends Component<SpotlightImageProps, any> {\r\n    render() {\r\n        return (\r\n            <div className=\"spotlight\">\r\n                <Row>\r\n                    <Col xs={12} xl={6}  className=\"content\">\r\n                        <h2>{this.props.title}</h2>\r\n                        <p>{this.props.texte}</p>\r\n                    </Col>\r\n                    <Col xs={12} xl={6}>\r\n                        <Image rounded fluid src={this.props.image} />\r\n                    </Col>\r\n                    {/* {this.props.imageRight ? this.textCol && this.imageCol : this.imageCol && this.textCol} */}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ntype SpotlightImageProps = {\r\n    imageRight: boolean,\r\n    image: string,\r\n    title: string,\r\n    texte: string,\r\n}\r\n","import React, { Component } from 'react'\r\nimport BannerServer from '../components/BannerServer'\r\nimport SpotlightImage from \"../components/SpotlightImage\";\r\nimport { Container, Row, Carousel, Col } from 'react-bootstrap'\r\nimport { FaEnvelope, FaGem, FaCommentDots, FaHeart } from 'react-icons/fa';\r\nimport burningman from '../assets/burningman.png'\r\nimport plage from '../assets/plage.png'\r\nimport karting from '../assets/karting.png'\r\nimport taxi from '../assets/taxi.png'\r\n//import plainte from '../assets/plainte.png'\r\n\r\nexport default class Homepage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BannerServer />\r\n                <div className=\"my-3\">\r\n                    <h2 className=\"text-center highlighted-title\">Le RolePlay à son apogée</h2>\r\n                    <p className=\"text-center\">\r\n                        Avec un staff très présent, vous pourrez rejoindre la ville de <b>Moonside</b> et jouer le rôle que vous souhaitez.\r\n                        <b>Bebert</b> le fermier ? <b>Clyde</b> le lieutenant de LSPD ? <b>Travis</b> le bras droit des <b>Bloods</b> ?\r\n                        Rejoins cette ville en constante évolution et saisis toute opportunité pour développer ton univers !\r\n                    </p>\r\n\r\n                    <SpotlightImage imageRight={false} image={burningman} title=\"Vos scènes. Vos choix.\" texte=\"Une multitude de péripéties et de décisions contraindront votre RP. Saurez-vous en faire bon usage ?\" />\r\n                    <div className=\"my-3\">\r\n                        <Container>\r\n                            <Row className=\"text-center\">\r\n                                <Col>\r\n                                    <span className=\"wrapper-major\">\r\n                                        <FaEnvelope className=\"icon-major\" />\r\n                                    </span>\r\n                                    <h3>Accès libre</h3>\r\n                                </Col>\r\n                                <Col>\r\n                                    <span className=\"wrapper-major\">\r\n                                        <FaGem className=\"icon-major\" />\r\n                                    </span>\r\n                                    <h3>Légal &amp; Illégal</h3>\r\n                                </Col>\r\n                                <Col>\r\n                                    <span className=\"wrapper-major\">\r\n                                        <FaCommentDots className=\"icon-major\" />\r\n                                    </span>\r\n                                    <h3>Evénements &amp; Soirées</h3>\r\n                                </Col>\r\n                                <Col>\r\n                                    <span className=\"wrapper-major\">\r\n                                        <FaHeart className=\"icon-major\" />\r\n                                    </span>\r\n                                    <h3>Staff actif</h3>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"my-3 pt-2\">\r\n                    <h2 className=\"text-center highlighted-title mb-3\">Disponible seulement sur Moonside</h2>\r\n                    <Carousel>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={karting}\r\n                                alt=\"Lieux inédits\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3>Lieux inédits</h3>\r\n                                <p>Courses de karting, locations de planches de surf, fastfood, bar de bikers, ...</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={plage}\r\n                                alt=\"Regroupement à la plage\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3>Evennements organisés par le staff</h3>\r\n                                <p>Le staff organise des évennements pour les citoyens (élections, soirées, ...) et vous aide à organiser les votre.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={taxi}\r\n                                alt=\"Métiers exclusifs\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3>Métiers exclusifs et retravaillés</h3>\r\n                                <p></p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={burningman}\r\n                                alt=\"Trafics et illégal extrèmes\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3>Illégal poussé au paroxysme</h3>\r\n                                <p>Trafics inédits, scènes travaillées, police efficace. L'illégal n'aura jamais autant eu le goût du risque.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        {/*                         <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src={plainte}\r\n                                alt=\"Immersion maximale\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3>Immersion maximale</h3>\r\n                                <p>Dépot de plainte, candidature pôle emploi, Twitter ... Une fois en jeu, plus besoin de Discord !</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item> */}\r\n                    </Carousel>\r\n                </div>\r\n                <div className=\"pb-3\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { FaMedal } from 'react-icons/fa'\r\nimport axios from 'axios'\r\nimport App from '../App'\r\n\r\nexport default class PlayerVoteRanking extends Component {\r\n    state = {\r\n        playerRank: []\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.getPlayerVoteRanking = this.getPlayerVoteRanking.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlayerVoteRanking();\r\n        setInterval(this.getPlayerVoteRanking, 60000);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"py-3\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Nom</th>\r\n                            <th>Nombre de votes</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.playerRank.slice(0, 10).map((player: any, index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{index === 0 ? <FaMedal color=\"gold\" />\r\n                                        : index === 1 ? <FaMedal color=\"silver\" />\r\n                                            : index === 2 ? <FaMedal color=\"#cd7f32\" />\r\n                                                : index + 1}</td>\r\n                                    <td className=\"text-capitalize\">{player.playername}</td>\r\n                                    <td>{player.votes}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getPlayerVoteRanking() {\r\n        axios.get('https://api.top-serveurs.net/v1/servers/' + App.topServerToken + '/players-ranking').then((result) => {\r\n            this.setState({ playerRank: result.data.players })\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Review from 'react-rating'\r\nimport { MdStar, MdStarBorder } from 'react-icons/md'\r\n\r\nexport default class TopServerReview extends Review {\r\n    render() {\r\n        return (\r\n            <Review step={1} start={0} stop={5} initialRating={this.props.initialRating} fractions={4} emptySymbol={<MdStarBorder color=\"#b37e7c\" />} \r\n            readonly={true} fullSymbol={<MdStar color=\"#b37e7c\"  />} />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\nimport TopServerReview from './TopServerReview'\r\n\r\n\r\nexport default class ReviewCard extends Component<ReviewCardProps, any> {\r\n    render() {\r\n        return (\r\n            <Col xs={12} md={6} xl={4}>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"text-center\">\r\n                            <TopServerReview initialRating={this.props.review.global} />\r\n                        </Card.Title>\r\n                        <blockquote className=\"blockquote mb-0\">\r\n                            <p className=\"text-justify\">{this.props.review.comment}</p>\r\n                            <footer className=\"blockquote-footer text-right\">{this.props.review.username}</footer>\r\n                        </blockquote>\r\n                        <Row className=\"text-center\">\r\n                            <Col xs={12} md={6}>\r\n                                <p>Qualité</p>\r\n                                <TopServerReview initialRating={this.props.review.quality} />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <p>Staff</p>\r\n                                <TopServerReview initialRating={this.props.review.staff} />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <p>Ambiance</p>\r\n                                <TopServerReview initialRating={this.props.review.ambient} />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <p>Disponibilité</p>\r\n                                <TopServerReview initialRating={this.props.review.uptime} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\ntype ReviewCardProps = {\r\n    review: any\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport PlayerVoteRanking from '../components/PlayerVoteRanking'\r\nimport App from '../App';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport ReviewCard from '../components/ReviewCard';\r\n\r\nexport default class ReviewsPage extends Component {\r\n    state = {\r\n        reviews: []\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.getReviewsTopServer = this.getReviewsTopServer.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getReviewsTopServer()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"pt-3\">\r\n                    <h2>Nos meilleurs voteurs</h2>\r\n                    <p>Pour rappel, voter rapporte de l'argent en jeu, utilisez donc votre nom RP pour voter sur\r\n                        <a href=\"https://top-serveurs.net/gta/moonside-rp\" target=\"_blank\" rel=\"noopener noreferrer\"> TopServeurs</a></p>\r\n                    <PlayerVoteRanking />\r\n                </div>\r\n                <div className=\"mt-3 pb-3\">\r\n                    <h2>Les avis sur le serveur</h2>\r\n                    <Row>\r\n                        {this.state.reviews.length <= 0 ? (\r\n                            <Col>\r\n                                <p>Aucun avis n'a été publié pour le moment.</p>\r\n                            </Col>\r\n                        ) : this.state.reviews.map((review: any) => {\r\n                            return <ReviewCard review={review} />\r\n                        })}\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getReviewsTopServer() {\r\n        axios.get('https://api.top-serveurs.net/v1/servers/' + App.topServerToken + '/advices')\r\n            .then((result: any) => {\r\n                this.setState({ reviews: result.data.advices })\r\n            })\r\n            .catch(() => {\r\n                console.error(\"Couldn't retrieve data from TopServers.\");\r\n            });    \r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TwitchEmbedVideo from \"react-twitch-embed-video\"\r\n\r\nexport default class Stream extends Component <any, any> {\r\n    render() {\r\n        return (\r\n            <TwitchEmbedVideo\r\n                autoplay\r\n                channel={this.props.channel}\r\n                height=\"100%\"\r\n                layout=\"video\"\r\n                muted={true}\r\n                targetId={\"twitch-embed-\" + this.props.channel}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Stream from '../components/Stream'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class StreamsPage extends Component {\r\n    streamChannels: string[] = [\r\n        'artandor',\r\n    ]\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Nos streamers et créateurs de contenus</h2>\r\n                <div className=\"text-small\">\r\n                    <p>Dans le but de soutenir notre communauté et celle des streamers du serveur, vous trouverez ici tous les streamers ayant demandé à être mis en valeur.</p>\r\n                    <p><b>@Streamers</b>, vous trouverez les conditions sur <Link to=\"/streams/rules\">cette page</Link>.</p>\r\n                    <p>Des cache map ont été crée pour vous et sont en téléchargement libre <a href=\"./cachemapmoonside.zip\" download>ici</a>.</p>\r\n                </div>\r\n                <Row>\r\n                    {this.streamChannels.map((channel, index) => {\r\n                        return (\r\n                            <Col xs={12} md={6} className=\"my-2\">\r\n                                <div className=\"iframe-container\">\r\n                                    <Stream channel={channel} key={channel} />\r\n                                </div>\r\n                            </Col>\r\n                        )\r\n                    })}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <Container id=\"footer\" className=\"bg-primary navbar-dark\">\r\n                <Row>\r\n                    <Col className=\"copyright text-left\">© MoonSide RP. All rights reserved.</Col>\r\n                    <Col className=\"text-right\">Développé par <a href=\"https://twitter.com/TheArtandor\" target=\"_blank\" rel=\"noopener noreferrer\">Artandor</a></Col>\r\n                </Row>\r\n            </Container >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class ReglementStreamers extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"py-2\">\r\n                <h2>Règlement adressé aux streamers</h2>\r\n                <p>Les règles spécifiques aux streamers évoquées dans le règlement sont les suivantes : </p>\r\n                <ul>\r\n                    <li>Ne pas se rendre sur les points illégaux en live (Récolte drogue /  Traitement etc)</li>\r\n                    <li>Mettre en place un cache map pour éviter le stream hack. Nous proposerons prochainement un cache map spécial <b>Moonside</b>.</li>\r\n                    <li>Ne pas utiliser sa communauté afin de nuire au serveur</li>\r\n                </ul>\r\n                <p>Tout manquement lors de vos live RP sera sanctionné et votre stream retiré de cette page.</p>\r\n{                <p>En demandant d'afficher votre stream sur cette page, vous vous garantissez une publicité gratuite, en échange nous vous demandons l'exclusivité,\r\n                c'est à dire que vous ne pourrez pas stream de GTA RP sur un autre serveur, sous peine d'être retiré de cette page.</p>}\r\n                <Button as={Link} to=\"/streams\">Retour aux streams</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport discordLogo from '../assets/Discord-Logo+Wordmark-White.svg';\r\nimport logo from '../assets/moonside.png'\r\nimport { IoMdPerson } from 'react-icons/io'\r\nimport { FaCheckCircle, FaRegQuestionCircle } from 'react-icons/fa'\r\nimport { MdReportProblem } from \"react-icons/md\";\r\nimport { Navbar, Nav, Image, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport App from '../App';\r\n\r\nexport default class Menu extends Component {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.getServerInfos = this.getServerInfos.bind(this);\r\n    }\r\n\r\n    state = {\r\n        serverSlots: null,\r\n        serverInfos: { slots: 0, name: '', online: 0, players: [] },\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getServerInfos();\r\n    }\r\n    render() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n                <Navbar.Brand as={Link} to=\"/\">\r\n                    <Image src={logo} roundedCircle height=\"30px\" width=\"30px\" />\r\n                </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link as={Link} to=\"/\">Accueil</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/jobs\">Jobs</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/reviews\">Avis</Nav.Link>\r\n                    <Nav.Link as={Link} to=\"/streams\">Streams</Nav.Link>\r\n                </Nav>\r\n                <Nav>\r\n                    <Navbar.Text className=\"server-status\">\r\n                        {this.state.serverInfos.online === 1 ? (<><FaCheckCircle color=\"green\" /> Online</>)\r\n                            : (\r\n                                <><MdReportProblem color=\"red\" /> Offline</>\r\n                            )\r\n                        }\r\n                        <OverlayTrigger\r\n                            placement=\"bottom-end\"\r\n                            overlay={\r\n                                <Tooltip id=\"server-status-help\">\r\n                                    Le status du serveur est mis à jour toutes les 30 minutes. Rendez vous sur Discord pour plus de précisions.\r\n                </Tooltip>\r\n                            }\r\n                        >\r\n                            <sup> <FaRegQuestionCircle /></sup>\r\n                        </OverlayTrigger>\r\n                    </Navbar.Text>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n                    <Navbar.Text>{this.state.serverInfos.players ? (<span><IoMdPerson /> {this.state.serverInfos.players?.length} en ligne / </span>) : null} {this.state.serverInfos.slots} places</Navbar.Text>\r\n                    <Nav.Link href=\"https://discord.gg/6PCVYcF\" target=\"_blank\">\r\n                        <Image src={discordLogo} height=\"30px\" width=\"auto\" />\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n    getServerInfos() {\r\n        axios.get('https://api.top-serveurs.net/v1/servers/' + App.topServerToken)\r\n            .then((result: any) => {\r\n                this.setState({ serverInfos: result.data.server })\r\n            })\r\n            .catch(() => {\r\n                console.error(\"Couldn't retrieve data from TopServers.\");\r\n            });\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Image } from 'react-bootstrap'\r\nimport taxiMoldu from '../../assets/images/jobs/taxiMoldu.jpg'\r\n\r\nexport default class JobTaxi extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"text-justify\">\r\n                <blockquote className=\"blockquote\">\r\n                    <p className=\"mb-0\">Taxi Cardie - Le taxi qui vous sauve la vie</p>\r\n                    <footer className=\"blockquote-footer\">Dominic Politiet</footer>\r\n                </blockquote>\r\n                <h3>Présentation de l'entreprise</h3>\r\n                <div>\r\n                    <p>\r\n                        Entreprise à taille humaine qui vise à servir la ville et qui placera les clients au centre de son attention,\r\n                        l’objectif est que les employés ne se sentent pas isolés dans ce métier très solitaire et superficiel dont fait partie le taxi.\r\n                        C’est pourquoi l’entreprise aura une politique sociale poussée afin de faire communiquer ses collaborateurs.\r\n                    </p>\r\n                </div>\r\n\r\n                <h3>Tarifs & Salaires</h3>\r\n                <div>\r\n                    <ul>\r\n                        <li>Boss - 2300€/mois & 125€/km</li>\r\n                        <li>Chauffeur Privé - 1900€/mois & 125€/km</li>\r\n                        <li>Taxi Expert - 1400€/mois & 75€/km</li>\r\n                        <li>Taxi Novice - 1150€/mois & 75€/km</li>\r\n                        <li>Taxi Recrue - 900€/mois & 75€/km</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"spotlight\">\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <Image rounded fluid src={taxiMoldu} />\r\n                        </Col>\r\n                        <Col xs={12} className=\"content py-3\">\r\n                            <h2>Ne vous ennuyez pas</h2>\r\n                            <p>Même quand les joueurs n'ont pas besoin de nous, les citoyens (moldus)\r\n                de la ville ont besoin de se déplacer. Faites vos missions avec eux et soyez récompensés.</p>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                <h3>A propos du patron</h3>\r\n                <div>\r\n                    <p>\r\n                        Moi, Dominic Politiet, je viens de Russie Sibérienne où j’ai grandi dans conditions difficile. Avant de venir à MoonSide j’ai pu assister à la\r\n                        déchéance capitaliste de la ville d’Aristonia. Depuis la mort de mon meilleur ami Dorian Vladimir en voiture, je souhaite devenir chauffeur de\r\n                        taxi afin de ne plus voir l’horreur d’un accident se produire. Je suis professionnel et capable d’assurer sécurité des clients. J’ai géré en\r\n                         Russie des groupes armés dans des opérations de sauvetages en Sibérie et suis donc capable de gérer cette modeste entreprise.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class JobPablitoRestau extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Un site a été crée pour le restaurant par Emy Castle. Vous pouvez le trouver \r\n                    à <a href=\"https://moonsiderp.wixsite.com/pablitorestau\" target=\"_blank\" rel=\"noopener noreferrer\">cette adresse</a>.</p>\r\n                <p>Aperçu</p>\r\n                <iframe width=\"100%\" height=\"600px\" title=\"Pablito Restau Wix\" src=\"https://moonsiderp.wixsite.com/pablitorestau\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Nav, Row, Col } from 'react-bootstrap'\r\nimport JobTaxi from '../components/jobs/JobTaxi'\r\nimport Job, { JobCategory } from '../data/models/Job'\r\nimport { Badge } from \"react-bootstrap\";\r\nimport JobPablitoRestau from '../components/jobs/JobPablitoRestau';\r\nimport { FaDotCircle } from 'react-icons/fa';\r\n\r\nexport default class JobsPage extends Component {\r\n    state = {\r\n        selectedNavJob: 'Gouvernement',\r\n        selectedJob: { name: '', icon: null, category: null, colorClass: \"\", hasPage: false },\r\n    }\r\n\r\n    jobs: Job[] = [\r\n        { name: 'Ambulancier (EMS)', icon: null, category: JobCategory.SERVICE, colorClass: \"service\" },\r\n        { name: 'Ammunitions', icon: null, category: JobCategory.SHOP, colorClass: \"shop\" },\r\n        { name: 'Auto-école', icon: null, category: JobCategory.SERVICE, colorClass: \"service\" },\r\n        { name: 'Avocat', icon: null, category: JobCategory.SERVICE, colorClass: \"service\" },\r\n        { name: 'Burgershot', icon: null, category: JobCategory.RESTAU, colorClass: \"bg-success\" },\r\n        { name: 'Commerçant', icon: null, category: JobCategory.SHOP, colorClass: \"shop\" },\r\n        { name: 'Concessionaire', icon: null, category: JobCategory.SHOP, colorClass: \"shop\" },\r\n        { name: 'Gouvernement', icon: null, category: JobCategory.SERVICE, colorClass: \"service\" },\r\n        { name: 'LSPD', icon: null, category: JobCategory.SERVICE, colorClass: \"service\" },\r\n        { name: 'Mécanicien', icon: null, category: JobCategory.SERVICE, colorClass: \"service\" },\r\n        { name: 'Nightclub', icon: null, category: JobCategory.SOIREE, colorClass: \"soiree\" },\r\n        { name: 'Pablito Restau', icon: null, category: JobCategory.RESTAU, colorClass: \"bg-success\", hasPage: true },\r\n        { name: 'Pibwasser', icon: null, category: JobCategory.SHOP, colorClass: \"shop\" },\r\n        { name: 'Tabagiste', icon: null, category: JobCategory.PREMIERE, colorClass: \"premiere\" },\r\n        { name: 'Taxi', icon: null, category: JobCategory.SERVICE, colorClass: \"service\", hasPage: true },\r\n        { name: 'Unicorn', icon: null, category: JobCategory.SOIREE, colorClass: \"soiree\" },\r\n        { name: 'Vigneron', icon: null, category: JobCategory.PREMIERE, colorClass: \"premiere\" },\r\n        { name: 'Yellowjack', icon: null, category: JobCategory.SOIREE, colorClass: \"soiree\" },\r\n\r\n    ]\r\n\r\n    componentDidMount() {\r\n        this.setState({selectedJob: this.jobs.find(job => job.name === this.state.selectedNavJob)})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"py-3\">\r\n                <Row>\r\n                    <Col md={3} xs={12}>\r\n                        <Nav variant=\"tabs\" className=\"flex-column justify-content-center\"\r\n                            activeKey={this.state.selectedNavJob} onSelect={(event: any) => this.setState({\r\n                                selectedNavJob: event,\r\n                                selectedJob: this.jobs.find(job => job.name === event)\r\n                            })}>\r\n                            {this.jobs.map((job: Job) => {\r\n                                return (\r\n                                    <Nav.Item key={job.name}>\r\n                                        <Nav.Link eventKey={job.name}><FaDotCircle color={job.hasPage ? 'green': 'orange'}/> {job.name}</Nav.Link>\r\n                                    </Nav.Item>)\r\n                            })}\r\n                        </Nav>\r\n                    </Col>\r\n                    <Col md={9} xs={12}>\r\n                        <div>\r\n                            <h2>{this.state.selectedJob.name}</h2>\r\n                            <div>\r\n                                <Badge pill className={\"job-category \" + this.state.selectedJob.colorClass}>{this.state.selectedJob.category}</Badge>\r\n                                {this.switchJobComponents()}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    switchJobComponents() {\r\n        switch (this.state.selectedNavJob) {\r\n            case \"Taxi\": {\r\n                return <JobTaxi />;\r\n            }\r\n            case \"Pablito Restau\": {\r\n                return <JobPablitoRestau />;\r\n            }\r\n            default:\r\n                return <p>Ce job n'a pas encore sa page. Créez un ticket sur discord si vous souhaitez la créer.</p>;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootswatch/dist/flatly/bootstrap.min.css\";\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport Homepage from './pages/Homepage';\nimport ReviewsPage from './pages/ReviewsPage';\nimport StreamsPage from './pages/StreamsPage';\nimport Footer from './components/Footer';\nimport ReglementStreamers from './pages/ReglementStreamers';\nimport Menu from './components/Menu';\nimport JobsPage from './pages/JobsPage';\n\nexport default class App extends Component {\n  static topServerToken = '8LN7K6XJEN';\n\n  render() {\n    return (\n      <Router basename=\"/moonside/\">\n        <Menu />\n        <Container className=\"body-content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/reviews\">\n              <ReviewsPage />\n            </Route>\n            <Route exact path=\"/streams\">\n              <StreamsPage />\n            </Route>\n            <Route exact path=\"/streams/rules\">\n              <ReglementStreamers />\n            </Route>\n            <Route exact path=\"/jobs\">\n              <JobsPage />\n            </Route>\n          </Switch>\n        </Container>\n        <Footer />\n      </Router>\n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/burningman.147d239d.png\";","module.exports = __webpack_public_path__ + \"static/media/banner.cdcf607d.gif\";","module.exports = __webpack_public_path__ + \"static/media/plage.daace123.png\";","module.exports = __webpack_public_path__ + \"static/media/karting.b22103ad.png\";","module.exports = __webpack_public_path__ + \"static/media/taxi.a1ba5e57.png\";","module.exports = __webpack_public_path__ + \"static/media/Discord-Logo+Wordmark-White.192cb945.svg\";","module.exports = __webpack_public_path__ + \"static/media/moonside.cbb87a29.png\";","module.exports = __webpack_public_path__ + \"static/media/taxiMoldu.d95a82dc.jpg\";"],"sourceRoot":""}